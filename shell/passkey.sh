#!/bin/bash

# passkey.sh ‚Äî CLI –¥–ª—è —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –∏ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏ –ø–∞—Ä–æ–ª–µ–π
if [[ -z "$PASSCRYPT_KEY" ]]; then
  echo "‚ùå –û—à–∏–±–∫–∞: –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è PASSCRYPT_KEY –Ω–µ –∑–∞–¥–∞–Ω–∞"
  exit 1
fi

MODE=$1
INPUT=$2

if [[ -z "$MODE" || -z "$INPUT" ]]; then
  echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:"
  echo "  $0 e \"–ø–∞—Ä–æ–ª—å –¥–ª—è —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è\""
  echo "  $0 d \"base64-–∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç\""
  echo "  $0 g [--length <–¥–ª–∏–Ω–∞>] [--level <—É—Ä–æ–≤–µ–Ω—å>]"
  echo "–ü—Ä–∏–º–µ—Ä:"
  echo "  PASSCRYPT_KEY=key123 $0 e \"mypassword\""
  exit 1
fi

if [[ "$MODE" == "e" ]]; then
  echo -n "$INPUT" | openssl enc -aes-256-cbc -a -salt -pbkdf2 -pass pass:"$PASSCRYPT_KEY"
elif [[ "$MODE" == "d" ]]; then
  echo "$INPUT" | openssl enc -aes-256-cbc -a -d -salt -pbkdf2 -pass pass:"$PASSCRYPT_KEY"
if [[ "$MODE" == "g" ]]; then
  LENGTH=16
  LEVEL="medium"
  while [[ "$#" -gt 0 ]]; do
    case $1 in
      -l|--length) LENGTH="$2"; shift ;;
      -L|--level) LEVEL="$2"; shift ;;
      *) ;;
    esac
    shift
  done

  LETTERS="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
  NUMBERS="0123456789"
  SYMBOLS_BASIC="@#-_+="
  SYMBOLS_ADVANCED="!@#\$%^&*()[]{}<>?~"
  UNICODE_PARANOID="üîêüí°üß†üåêüé≤üöÄ‰Ω†Â•Ω‚Ä†¬±Œª@#‚Ç¨"

  case "$LEVEL" in
    low) CHARS="${LETTERS}${NUMBERS}" ;;
    medium) CHARS="${LETTERS}${NUMBERS}${SYMBOLS_BASIC}" ;;
    strong) CHARS="${LETTERS}${NUMBERS}${SYMBOLS_BASIC}${SYMBOLS_ADVANCED}" ;;
    paranoid) CHARS="${LETTERS}${NUMBERS}${SYMBOLS_BASIC}${SYMBOLS_ADVANCED}${UNICODE_PARANOID}" ;;
    *) echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏: $LEVEL"; exit 1 ;;
  esac

  PASSWORD=""
  for i in $(seq 1 $LENGTH); do
    INDEX=$(( RANDOM % ${#CHARS} ))
    CHAR="${CHARS:INDEX:1}"
    PASSWORD+="$CHAR"
  done

  echo "$PASSWORD"
  exit 0
fi
else
  echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ä–µ–∂–∏–º: $MODE (–¥–æ–ø—É—Å—Ç–∏–º—ã e –∏–ª–∏ d)"
  exit 1
fi